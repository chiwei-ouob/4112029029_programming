# -*- coding: utf-8 -*-
"""1018_回家作業.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1m9teLwuF18kx7lWpyp-Sf61vHF69ME5v

Ｑ：模擬圖書館的書籍管理系統，讓使用者可藉由輸入書本名稱＆作者查找書籍

程式應包含以下操作：


1.   允許用戶可選擇四項功能：列印所有書籍、添加書籍、查詢書籍、結束。
2.   創建一個空的書籍列表，每本書籍包含書名、作者和出版年份等資訊。
1.   使用迭代器列印所有書籍的資訊。
2.   使用 itertools 模組中的函式將書籍列表按書名或作者名進行分組。
1.   允許用戶查詢特定書籍的資訊，讓使用者可藉由輸入書本名稱＆作者查找書籍。

## **請勿刪除註解及修改配分**
# 請依據提示完成程式碼，勿修改變數名稱
"""

# 請import需要使用的相關套件(10%)
import itertools
import re

def main():
    # 創建新的書籍列表，每本書籍包含書名、作者和出版年份等資訊(5%)
    
    library = []  # [{"book_title":_,"book_author":_,"book_year":_, "book_info":_}...]
    def add_item(title, author, year, info):
        library.append({"book_title":title,"book_author":author,"book_year":year, "book_info": info})


    while True:
        print("選項：")
        print("1. 列印所有書籍")
        print("2. 添加新書籍")
        print("3. 查詢書籍")
        print("4. 結束")
        option = input("輸入選項： ")

        if option == '1':
            print("\n所有書籍資訊：")
            # 使用 itertools 模組中的分組函式，讓使用者可以選擇將書籍列表按書名或作者名印出(40%)
            sort_by = input("1. 按書名 2. 按作者名 排列: ")
            if sort_by =="1":
                sorted_books = sorted(library, key=lambda x: x["book_title"], reverse=False)
                  # itertools.groupby(可迭代物件) 得到多組 (key, values) 
                library_sorted_by_title = itertools.groupby(sorted_books, lambda x: x["book_title"])
                  # key: ["title"], value: [{"title":_,"author":_,"year":_}, {...}, ...]
                for name, info in library_sorted_by_title:
                    info_list = list(info)  # 避免 i 出現錯誤訊息 "list index out of range"
                    for i in info_list:
                        print (i['book_info'])
                        # print (f"書名: {list(info)[i]['book_title']},
                        #         作者: {list(info)[i]['book_author']},
                        #         出版年份: {list(info)[i]['book_year']} ") # 問: 為什麼只能用單引號?
                    
            elif sort_by =="2":
                sorted_books = sorted(library, key=lambda x: x["book_author"], reverse=False) 
                library_sorted_by_author = itertools.groupby(sorted_books, lambda x: x["book_author"])
                for author, info in library_sorted_by_author:
                    info_list = list(info)
                    for i in info_list:
                        print (i['book_info'])
            else:
                print("無效選項。\n")
                

        elif option == '2':
            book_title = input("輸入書名： ")
            book_author = input("輸入作者： ")
            book_year = input("輸入出版年份： ")

            # 使用re模組檢查書名和作者只能包含字母和空格(10%)
            if (re.search("[^A-Za-z ]", book_title) or re.search("[^A-Za-z ]", book_author)):
                print ("書名和作者只能包含字母和空格。")
                #break
                continue
            
            book_info = f"書名: {book_title}, 作者: {book_author}, 出版年份: {book_year}"
            #library.append(book_info)
            add_item(book_title, book_author, book_year, book_info)
            print("書籍已添加。\n")

        elif option == '3':
            search_title = input("輸入要查詢的書名： ")
            search_author = input("輸入要查詢的作者： ")

            # 使用re模組檢查書名和作者只能包含字母和空格(10%)
            if (re.search("[^A-Za-z ]", search_title) or re.search("[^A-Za-z ]", search_author)):
                print ("書名和作者只能包含字母和空格。")
                continue
            # [ item["name"] for item in a if item["number"] == 2 ]
            found_books = [book for book in library 
                           if (book['book_title'] == search_title or book['book_author'] == search_author) ]
            # 將找到的書籍用list綜合表達式呈現，請完成[]中的程式碼(15%)

            if found_books:
                print("\n查詢結果：")
                # 使用for迴圈，將找到的書籍印出來(10%)
                for book in found_books:
                    print (book['book_info'])
            else:
                print("未找到符合條件的書籍。\n")

        elif option == '4':
            break
        else:
            print("無效選項。請重新輸入。\n")

if __name__ == "__main__":
    main()

'''
測資:
2
Caculus
Lee
2013
2
英語
Andy
2022
2
English
Andy
2022
2
CSS and HTML5
Papaya
2017
2
CSS and HTML
Papaya
2017
2
accounting
Peter
2017
1
1
1
2
3
Accounting
Papaya
3
CSS和HTML5
Somebody
3
English
Lee
3
CSS and HTML5
Peter
3
Apple
Juice
4

'''