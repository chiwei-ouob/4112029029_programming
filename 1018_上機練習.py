# -*- coding: utf-8 -*-
"""1018_上機練習.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1L9RsAgiiPObU7M1Dff95tfDkmi85DIz2

Ｑ：讓使用者可輸入多個學生成績和姓名，一位學生須輸入兩科科目（科目Ａ、科目Ｂ）的分數。

程式應包含以下操作：

1.   將學生成績和姓名儲存在一個字典中，其中學生姓名是鍵，成績是值。
2.   使用 itertools 模組中的函式，**算出全班有幾位學生。**
1.   根據每位學生兩科的平均成績作排名，並印出此成績單。
2.   使用 re模組檢查，**學生姓名只能包含字母，成績必須為數字**。
1.   平均成績前六名者可進行抽獎，抽出三名學生可得到禮物。
2.   使用迭代器列印中獎名單。

## **請勿刪除註解及修改配分**
"""

# 請import需要使用的相關套件(10%)
import itertools
import random
import re

# 請依據提示完成程式碼，勿修改變數名稱


def main():
    student_scores = {} # 此為儲存學生姓名與成績的字典
    student_count = 0  # 初始化學生人數為 0

    while True: # (40%)
       # 使用迴圈設定條件使程式能執行或停止
       # 使用 re模組檢查，學生姓名只能包含字母，成績必須為數字
        student_name = input("輸入學生姓名（輸入end則結束輸入成績）： ")
        if student_name == "end":
            break
        
        pattern_word = r"([^a-zA-Z _])"
        match_name = re.search(pattern_word, student_name)
        if match_name:
            print("姓名只能包含字母。再試一次。")
            
        else: 
            student_score_a = input("輸入學生科目A之成績： ")
            student_score_b = input("輸入學生科目B之成績： ")
            pattern_word = r"([^0-9])"
            match_a = re.search(pattern_word, student_score_a)
            match_b = re.search(pattern_word, student_score_b)
            if match_a or match_b:
                print("成績只能包含數字。再試一次。")
                break
            
            student_scores[student_name] = [student_score_a, student_score_b]
            student_count+=1


    def calculate_average(scores):
        # 定義如何計算平均分數(15%)
        average = float((int(scores[0]) + int(scores[1]))/2)
        return average


    avg_scores = {} # 計算每位學生的平均分數並存進字典中，請自行完成{}內的程式碼
    # for count in range(student_count):
    #     scores = list(student_scores.values())[count]
    #     name = list(student_scores.keys())[count]
    #     avg_score = calculate_average(scores)
    #     avg_scores[name] = avg_score
        
    for name in student_scores:
        scores = student_scores[name]
        avg_score = calculate_average(scores)
        avg_scores[name] = avg_score
        
    
    print("學生成績單：")
    for count in range(student_count):
        scores = list(student_scores.values())[count]
        name = list(student_scores.keys())[count]
        print (f"{count+1}. {name}: 科目A: {scores[0]}，科目B: {scores[1]}，平均成績: {calculate_average(scores)}")
    print("學生總人數", student_count)

    ranked_students = sorted(avg_scores.items(), key=lambda x: x[1], reverse=True) # 將學生成績排序

    # 使用for迴圈將成績單內容印出(20%)
    #print (ranked_students[0][1]) (name, avg)
    for student in ranked_students:
        count = list(ranked_students).index(student)
        print (f"{ranked_students[count][0]}: 平均成績: {ranked_students[count][1]}")

    top_six_students = ranked_students[:6]
    if len(top_six_students) >= 3:
        winners = random.sample(top_six_students, 3) # random為隨機抽取三位
        print("\n中獎學生：")
        # 使用for迴圈將中獎學生的姓名、平均成績印出(15%)
        for winner in winners:
            count = list(winners).index(winner)
            print (f"{winners[count][0]}: 平均成績: {winners[count][1]}")

if __name__ == "__main__":
    main()